name: Build and push cliain docker image

on:
  push:
    paths:
      - 'bin/cliain/**'
  workflow_dispatch:

jobs:
  build-image:
    name: Build binary
    runs-on: self-hosted
    steps:
      - name: Fail if required variable or secret is missing
        if: >
          secrets.ECR_REPO_CLIAIN == '' ||
          secrets.ECR_PUBLIC == '' ||
          secrets.AWS_MAINNET_ACCESS_KEY_ID == '' ||
          secrets.AWS_MAINNET_SECRET_ACCESS_KEY == ''
        run: |
          echo "Looks like some variables or secrets are missing!"
          exit 1

      - name: GIT | Checkout source code
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1

      #- name: Install Protoc
      #  uses: arduino/setup-protoc@v1
      #  with:
      #    version: '3.6.1'
      #    repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cargo | Build release binary
        run: |
          cd ./bin/cliain && cargo build --release

      - name: GIT | Get branch name and commit SHA
        id: get-branch
        uses: ./.github/actions/get-branch

      - name: Set RELEASE_IMAGE env var
        run: |
          echo "RELEASE_IMAGE=${{ secrets.ECR_REPO_CLIAIN }}:${{ steps.get-branch.outputs.branch_name == 'main' && 'latest' || steps.get-branch.outputs.branch_name }}" >> $GITHUB_ENV

      - name: Build docker image
        id: build-docker-image
        run: |
          docker buildx build -t "${{ env.RELEASE_IMAGE }}" -f ./bin/cliain/Dockerfile ./bin/cliain

      - name: Login to ECR docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_PUBLIC }}
          username: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}

      - name: Push docker image
        run: |
          docker push "${{ env.RELEASE_IMAGE }}"

      # TODO: I cannot get this to work locally!
      #
      #- name: Set up Docker Buildx
      #  id: buildx
      #  uses: docker/setup-buildx-action@v2
      #  env:
      #    DOCKER_BUILDKIT: '0'
      #  with:
      #    version: v0.9.1
      #    config-inline: |
      #      [registry."172.66.0.2:5000"]
      #        http = true

      #- name: Build and push latest docker image
      #  id: build-image
      #  env:
      #    RELEASE_IMAGE: ${{ secrets.ECR_REPO_CLIAIN }}:${{ steps.get_branch.outputs.branch_name == 'main' && 'latest' || steps.get_branch.outputs.branch_name }}
      #    DOCKER_BUILDKIT: '0'
      #  uses: docker/build-push-action@v4
      #  with:
      #    context: ./bin/cliain
      #    builder: ${{ steps.buildx.outputs.name }}
      #    file: ./bin/cliain/Dockerfile
      #    push: true
      #    tags: ${{ env.RELEASE_IMAGE }}
