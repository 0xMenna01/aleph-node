---
#  This workflow builds docker from aleph-node production binary and docker from e2e client binary
name: Build production node image and e2e client image
on:
  workflow_call:
    inputs:
      build-synthetic-network-docker:
        description: Set to 'true' to build synthetic network docker
        required: false
        type: boolean
        default: false
      build-production-node:
        description: Set to 'true' to build production node
        required: false
        type: boolean
        default: false

jobs:
  build-production-node-image:
    if: inputs.build-production-node != false
    name: Build production node docker image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v4

      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: aleph-production-node
          path: target/release/

      - name: Build release docker image
        id: build-image
        run: |
          chmod +x target/release/aleph-node
          docker build --tag aleph-node:latest -f ./docker/Dockerfile .
          docker save -o aleph-node.tar aleph-node:latest

      - name: Upload release docker image
        uses: actions/upload-artifact@v3
        with:
          name: aleph-release-docker
          path: aleph-node.tar
          if-no-files-found: error
          retention-days: 7

  build-synthetic-network-docker:
    if: inputs.build-synthetic-network-docker != false
    needs: [build-production-node-image]
    name: Build synthetic-network image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download artifact with docker image for aleph-node
        uses: actions/download-artifact@v3
        with:
          name: aleph-release-docker

      - name: Load node docker image
        shell: bash
        run: docker load -i aleph-node.tar

      - name: Build release docker image
        id: build-image
        shell: bash
        run: |
          export TERM=xterm-256color
          scripts/synthetic-network/build_synthetic-network.sh
          docker save -o aleph-node.tar aleph-node:syntheticnet

      - name: Upload release docker image
        uses: actions/upload-artifact@v3
        with:
          name: aleph-release-synthetic-docker
          path: aleph-node.tar
          if-no-files-found: error
          retention-days: 7
